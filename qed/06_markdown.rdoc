= QED Markup Support

Markup supports any markup language that renders to fairly straight-forward
HTML. For Ruby projects, this will almost inevitablly be RDoc. But other
options are available, sach as Markdown. In fact, QED supports all markup
formats also supported by Tilt[http://github.com/tilt].

In this document we will demonstrate a benign Markdown example as well as
a raw HTML example to show that they can indeed be used and to explicate
and minor distinction that need to be considered between formats.

To begin lets look at a raw HTML example. Lets say we have an HTML document
called +example.html+ with the following contents...

  <html>
  <body>
  <h1>Example</h1>
  <p>This is an example of a Markdown Demonstrandum.</p>
  <pre>
  a = 1
  b = 2
  </pre>
  <p>As with any QED document we can use @pre@ sections to execute code.</p>
  <pre>
  c = a + b
  </pre>
  <p>And make assertions that will be tested.</p>
  <pre>
  c.assert == 3
  </pre>
  <p>Notice with Markdown, at least four spaces are required to create
  a <tt>pre</tt> section.</p>
  </body>
  </html>

And lets say we have an equivalent Markdown document called +example.markdown+
with the following contents...

  # Example

  This is an example of a Markdown Demonstrandum.

       a = 1

       b = 2

  As with any QED document we can use @pre@ sections to execute code.

       c = a + b

  And make assertions that will be tested.

       c.assert == 3

  Notice with Markdown, at least four spaces are required to create
  a `pre` section.

Now when we run these examples through QED the result will be effectively
the same.

  `qed -v example.html`.assert == `qed -v example.markdown`


