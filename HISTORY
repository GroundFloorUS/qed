= RELEASE HISTORY

== 2.2.0 / 2010-06-20

This release returns to a text-based evaluator, rather
then use HTML. Processing HTML proved to have too many
edge cases to be effective --both in implementation
and in end-usage. So to remedy the situation QED has
return to supportting simple markup formats such as
RDoc and Markup.

This release also adds multi-pattern advice. Instead of
a single pattern, multiple patterns can be matched
sequentially. This make it a easier to match large text
descriptions without restoring to regular expressions.

In addition QED now supports raw text blocks. By ending
a description section in ellipsis (...), the subsequent
code setion becomes a plain text section and is passed
into the argument list of any matching When advice. This
makes it easy to scaffold fixture files, for example.

Finally, this release also refines the evaluation scopes.
Where before, a new binding was being created, each was 
attached to the TOPLEVEL, and therefore not truly isolated 
on a per-dcoument basis. To correct, QED now mocks the
TOPLEVEL providing a new instance of this mock object for
each document.

Changes:

* No longer uses HTML for document processing.
* Support for plain text blocks using ellipsis.
* New sequential multi-pattern matches.
* Mock TOPLEVEL at both the demo and applique levels.
* Adjust color support for latest ANSI release.


== 2.1.1 / 2010-04-08

Fixed bug introduced in the last version that executed all
scripts in a single binding. There needed to be a binding
for each script.

Changes:

* Fixed cross-script bug by moving binding instantiation into Script class.


== 2.1.0 / 2010-04-07

QED documents are now run in the TOPLEVEL context, rather
than in a subclass of Scope. This ensures code runs as
one would expect it too in the wild.

Changes:

* Scope.new redirect to TOPLEVEL.
* DomainLanguage module is added to include into TOPLEVEL.


== 2.0.0 / 2010-03-04

This is a major new release of QED. All demonstration documents
are now converted to HTML via Tilt (http://github.com/tilt) before
being run through the test runner. So QED now supports any markup
format supported by Tilt, as well as ordinary HTML. Simply
stated, QED process <tt>pre</tt> tags as code and everything else
as comments. Nokogiri is used to parse the HTML.

Changes:

* HTML serves as a common format.
* New dependencies: Tilt and Nokogiri.
* New system of version numbers.


== 1.2 / 2009-12-07

This release adds a significant new feature, Comment Matchers.
These work like Cucumber allowing for background code to
be run when matching comments occur --a much better solution
for setup and teardown.

Changes:

* 2 Major Enhancements

  * Added command matchers via #When method.
  * All QED methods are now capitalized.

* 2 Minor Enhancements

  * Use OptionParser for qed exectuable.
  * Verbatim reporter is literally verbatim.


== 1.1 / 2009-09-05

This release 

Changes:

* 2 Major Enhancements

  * Helpers are provided by bottom code.
  * Added Markdown header support.

* 2 Minor Enhancements

  * Use Ansi project for color output.
  * Use latest RDoc version.


== 1.0 / 2009-06-30

QED has found itself. It took some time to really figure out
what this project "was" and how it should best be utilized.
This release is the initial release that puts QED in proper
perpective.

Changes:

* 2 Major Enhancement

    * Partial rewrite of a project that was once called "Quarry".
    * Now uese AE for assertions.

